---
# ./.github/workflows/release.yaml

name: Release

on:
  push:
    branches:
      - main

jobs:
  bump-version:
    runs-on: ubuntu-latest
    outputs:
      NEW_VERSION: ${{ steps.set_var.outputs.NEW_VERSION }}
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v2
      - name: Get latest tag
        id: get_latest_tag
        run: echo "::set-output name=TAG_NAME::$(git describe --tags --abbrev=0)"
      - name: Extract version from tag
        id: extract_version
        run: echo "::set-output name=NEW_VERSION::$(echo ${{ steps.get_latest_tag.outputs.TAG_NAME }} | cut -d 'v' -f 2)"

  github-release:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v2
      - name: Create a release.
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: "v${{ needs.bump-version.outputs.NEW_VERSION }}"
          prerelease: false
          title: "v${{ needs.bump-version.outputs.NEW_VERSION }}"

  push-to-galaxy:
    runs-on: ubuntu-latest
    needs: github-release
    if: ${{ needs.github-release.result == 'success' }}
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v4
      - name: Set up Python 3.
        uses: actions/setup-python@v5
      - name: Install Ansible.
        run: pip3 install ansible-core
      - name: Import role to Galaxy.
        run: >-
          ansible-galaxy role import --api-key ${{ secrets.GALAXY_API_KEY }}
          $(echo ${{ github.repository }} | cut -d/ -f1) $(echo ${{ github.repository }} | cut -d/ -f2)
