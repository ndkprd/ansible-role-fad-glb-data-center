---
# ./.github/workflows/release.yaml

name: Release

on:
  push:
    branches:
      - main

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v4
      - name: Set up Python 3.
        uses: actions/setup-python@v5
      - name: Install bumpversion.
        run: pip3 install bumpversion
      - name: Read current version.
        id: read-version
        run: echo "::set-output name=version::$(cat VERSION)"
      - name: Increment patch version.
        run: |
          bumpversion --new-version ${NEW_VERSION} VERSION
          new_version=$(cat VERSION)
          echo "::set-output name=new_version:$new_version"
      - name: Set new version.
        run: echo "NEW_VERSION=$(cat VERSION)" >> $GITHUB_ENV

  github-release:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v4
      - name: Create a release.
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "v${{ env.NEW_VERSION }}"
          prerelease: false
          title: "v${{ env.NEW_VERSION }}"

  push-to-galaxy:
    runs-on: ubuntu-latest
    needs: github-release
    if: ${{ needs.github-release.result == 'success' }}
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v4
      - name: Set up Python 3.
        uses: actions/setup-python@v5
      - name: Install Ansible.
        run: pip3 install ansible-core
      - name: Import role to Galaxy.
        run: >-
          ansible-galaxy role import --api-key ${{ secrets.GALAXY_API_KEY }}
          $(echo ${{ github.repository }} | cut -d/ -f1) $(echo ${{ github.repository }} | cut -d/ -f2)
