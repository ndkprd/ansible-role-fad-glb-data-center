---
# ./.github/workflows/release.yaml

name: Release

on:
  push:
    branches:
      - main

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Read current version
        run: |
          version=$(cat VERSION)
          major_minor="${version%.*}"
          last_number="${version##*.}"
          new_last_number=$((last_number + 1))
          new_version="${major_minor}.${new_last_number}"
          echo "$new_version" > VERSION
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add VERSION
          git commit -m "Bump version to $new_version"
          git push origin main
      - name: Set new version
        run: echo "NEW_VERSION=$(cat VERSION)" >> $GITHUB_ENV

  github-release:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create a release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: "v${{ env.NEW_VERSION }}"
          prerelease: false
          title: "v${{ env.NEW_VERSION }}"

  push-to-galaxy:
    runs-on: ubuntu-latest
    needs: github-release
    if: ${{ needs.github-release.result == 'success' }}
    steps:
      - name: Checkout repo.
        uses: actions/checkout@v4
      - name: Set up Python 3.
        uses: actions/setup-python@v5
      - name: Install Ansible.
        run: pip3 install ansible-core
      - name: Import role to Galaxy.
        run: >-
          ansible-galaxy role import --api-key ${{ secrets.GALAXY_API_KEY }}
          $(echo ${{ github.repository }} | cut -d/ -f1) $(echo ${{ github.repository }} | cut -d/ -f2)
