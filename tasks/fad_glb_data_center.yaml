---

- name: Print out the GLB Data Center existing values.
  ansible.builtin.debug:
    msg: >
      {{ (lookup('url', fad_glb_data_center_api_endpoint
      % (data_center.name), validate_certs=false,
      split_lines=false, headers=fad_api_header) | from_json).get('payload') }}
  loop: "{{ fad_glb_data_centers }}"
  loop_control:
    loop_var: data_center
    label: "{{ data_center.name }}"
  tags: [debug]

- name: Create new GLB Data Center entry if entry not found.
  ansible.builtin.uri:
    method: POST
    url: "{{ fad_glb_data_center_api_endpoint | format(data_center.name) }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
    body: |
      {
        "mkey": "{{ data_center.name }}",
        "location": "{{ data_center.location }}"
      }
  register: fad_glb_data_center_post_results
  loop: "{{ fad_glb_data_centers }}"
  loop_control:
    loop_var: data_center
    label: "{{ data_center.name }}"
  when: >
    (lookup('url', fad_glb_data_center_api_endpoint
    % (data_center.name), validate_certs=false, split_lines=false,
    headers=fad_api_header) | from_json).get('payload').mkey is undefined
  changed_when: "fad_glb_data_center_post_results.json.payload == 0"
  failed_when: "fad_glb_data_center_post_results.json.payload not in [0, -15]"

- name: Update Data Center entry if it exist and any of its value has changed.
  ansible.builtin.uri:
    method: PUT
    url: "{{ fad_glb_data_center_api_endpoint | format(data_center.name) }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
    body: |
      {
        "mkey": "{{ data_center.name }}",
        "location": "{{ data_center.location }}"
      }
  register: fad_glb_data_center_put_results
  loop: "{{ fad_glb_data_centers }}"
  loop_control:
    loop_var: data_center
    label: "{{ data_center.name }}"
  when: >
    ((lookup('url', fad_glb_data_center_api_endpoint
    % (data_center.name), validate_certs=false, split_lines=false,
    headers=fad_api_header) | from_json).get('payload').mkey is defined)
    and
    (data_center.location != (lookup('url', fad_glb_data_center_api_endpoint
    % (data_center.name), validate_certs=false, split_lines=false,
    headers=fad_api_header) | from_json).get('payload').location)
  ignore_errors: true
  changed_when: "fad_glb_data_center_put_results.json.payload == 0"
  failed_when: "fad_glb_data_center_put_results.json.payload not in [0, -15]"

- name: Print out the GLB Data Center values after create/update task.
  ansible.builtin.debug:
    msg: >
      {{ (lookup('url', fad_glb_data_center_api_endpoint
      % (data_center.name), validate_certs=false,
      split_lines=false, headers=fad_api_header) | from_json).get('payload') }}
  loop: "{{ fad_glb_data_centers }}"
  loop_control:
    loop_var: data_center
    label: "{{ data_center.name }}"
  tags: [debug]
